{
  "name": "@andreabiagini5/applicazioni-e-servizi-web-project",
  "description": "Project for Applicazioni e Servizi Web.",
  "authors": [
    {
      "name": "Andrea Biagini",
      "email": "andrea.biagini5@studio.unibo.it"
    },
    {
      "name": "Filippo Gurioli",
      "email": "filippo.gurioli@studio.unibo.it"
    },
    {
      "name": "Leonardo Randacio",
      "email": "leonardo.randacio@studio.unibo.it"
    }
  ],
  "license": "MIT",
  "private": false,
  "scripts": {
    "build": "node -e \"require('child_process').execSync(process.platform === 'win32' ? 'build.bat' : 'sh build.sh', { stdio: 'inherit' })\"",
    "set-hooks": "node -e \"require('child_process').execSync(process.platform === 'win32' ? 'set-hooks.bat' : 'sh set-hooks.sh', { stdio: 'inherit' })\"",
    "start": "concurrently --kill-others-on-fail \"npm run start:server\" \"npm run start:client\"",
    "serve": "concurrently --kill-others-on-fail \"npm run serve:server\" \"npm run serve:client\"",
    "type-check": "npm run type-check:server && npm run type-check:client",
    "format": "prettier --write src/",
    "lint": "npm run lint:server && npm run lint:client",
    "test": "npm run test:server && npm run test:client",
    "install": "cd src/server && npm install && cd ../client && npm install",
    "lint:client": "cd src/client && npm run lint",
    "lint:server": "cd src/server && npm run lint",
    "type-check:server": "cd src/server && npm run type-check",
    "type-check:client": "cd src/client && npm run type-check",
    "build:server": "cd src/server && npm run build",
    "build:client": "cd src/client && npm run build",
    "build:docs": "cd src/server && npx typedoc",
    "start:client": "cd src/client && npm run start",
    "start:server": "cd src/server && npm run start",
    "serve:client": "cd src/client && npm run serve",
    "serve:server": "cd src/server && npm run serve",
    "test:client": "cd src/client && npm run test",
    "test:server": "cd src/server && npm run test",
    "postversion": "cp package.json ..",
    "dockerbuild": "npm run dockerbuild:server && npm run dockerbuild:client",
    "dockerbuild:server": "sudo docker build -t andreabiagini5/aswserver src/server/",
    "dockerbuild:client": "sudo docker build -t andreabiagini5/aswclient src/client/",
    "dockerstart": "mkdir -p src/server/mongodatabase && sudo chown 999:$(id -g) src/server/mongodatabase && sudo chmod 755 src/server/mongodatabase && sudo docker compose up"
  },
  "publishConfig": {
    "access": "public"
  },
  "devDependencies": {
    "@types/node": "^22.12.0",
    "concurrently": "^9.1.2",
    "semantic-release": "^24.2.1",
    "semantic-release-preconfigured-conventional-commits": "^1.1.119",
    "sonarqube-scanner": "^4.2.6",
    "ts-node": "^10.9.2",
    "typescript": "^5.7.3"
  },
  "version": "0.2.17",
  "keywords": [
    "web",
    "client-server",
    "express",
    "vue",
    "typescript"
  ],
  "homepage": "https://github.com/AndreaB2000/ASW-project/blob/main/README.md",
  "bugs": {
    "url": "https://github.com/AndreaB2000/ASW-project/issues"
  },
  "main": "dist/server.app.js",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/AndreaB2000/ASW-project.git"
  },
  "engines": {
    "node": ">=20.0.0 <=22.17.0"
  },
  "os": [
    "linux",
    "macos",
    "win32",
    "darwin"
  ],
  "dependencies": {
    "helmet": "^8.0.0"
  }
}

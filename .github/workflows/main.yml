name: ASW CI/CD

on:
  push:
    branches-ignore:
      - renovate/**
  workflow_dispatch:
  pull_request:

concurrency:
  group: ${{ github.event.number || github.ref }}
  cancel-in-progress: ${{ !contains(github.ref, 'main') }}

permissions:
  contents: write
  pull-requests: write
  actions: write
  checks: write

jobs:
  build-test:
    concurrency:
      group: build-${{ matrix.os }}-${{ matrix.node-version }}-${{ github.event_name == 'push' && (github.actor == 'renovate[bot]' && 'renovate' || 'push') || 'pr' }}
      cancel-in-progress: ${{ github.event_name == 'push' && github.actor != 'renovate[bot]' }}
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-2022, macos-13]
        node-version: [20, 22]
    runs-on: ${{ matrix.os }}
    name: build-&-test
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm clean-install
      - name: Install compatible @types/node version
        run: |
          npm uninstall @types/node
          npm install -D @types/node@${{ matrix.node-version }}
      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: npm audit signatures
      - name: Build
        run: npm run build
      - name: Test
        run: npm test

  coverage:
    runs-on: ubuntu-24.04
    needs:
      - build-test
    name: coverage
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Install dependencies
        run: npm clean-install
      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: npm audit signatures
      - name: Run Coverage
        run: npm run test
      - name: Run SonarQube Analysis
        run: |
          npx sonarqube-scanner \
          -Dsonar.token=${{ secrets.SONAR_TOKEN }}

  sign-release:
    concurrency:
      group: release-${{ github.event.number || github.ref }}
    runs-on: ubuntu-24.04
    needs:
      - build-test
    name: semantic-release
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    outputs:
      new_version: ${{ steps.extract-version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Install dependencies
        run: npm clean-install
      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: npm audit signatures
      - name: Build
        run: npm run build
      - name: Import GPG key
        id: import-gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
      - name: Sign the artifact
        run: |
          tar -czf dist.tar.gz dist
          mv dist.tar.gz dist/dist.tar.gz
          gpg --batch --yes --detach-sign --armor --local-user ${{ steps.import-gpg.outputs.fingerprint }} dist/dist.tar.gz
      - name: Verify signature
        run: |
          gpg --verify dist/dist.tar.gz.asc dist/dist.tar.gz
      - name: Login to Docker Hub
        if: ${{ github.event_name != 'pull_request' }}
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: andreabiagini5
        run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin docker.io
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
      - name: Extract published version
        id: extract-version
        run: |
          VERSION=$(jq -r '.nextRelease.version // ""' release_output.txt || echo "")
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

  send-notification:
    runs-on: ubuntu-24.04
    needs:
      - sign-release
      - coverage
      - build-test
    if: always()
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Extract Branch Name
        id: vars
        run: |
          if [[ "${GITHUB_REF##*/}" == "merge" ]]; then
            echo "BRANCH_NAME=PR" >> $GITHUB_ENV
          else
            echo "BRANCH_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV
          fi

      - name: Get Commit Message
        id: commit_message
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=%B -n 1 ${{ github.event.pull_request.head.sha }} | tr '\n' ' ')
          echo "COMMIT_MESSAGE=${COMMIT_MESSAGE}" >> $GITHUB_ENV

      - name: Determine Pipeline Status
        id: status
        run: |
          if [[ "${{ needs.sign-release.result }}" == "success" ]]; then
            if [[ "${{ env.BRANCH_NAME }}" == "main" && "${{ needs.sign-release.outputs.new_version }}" != "" ]]; then
              echo "TITLE=# ✅New Release: ${{ needs.sign-release.outputs.new_version }}" >> $GITHUB_ENV
            else
              echo "TITLE=# ✅Pipeline Passed: ${{ env.BRANCH_NAME }}" >> $GITHUB_ENV
            fi
          elif [[ "${{ needs.sign-release.result }}" == "cancelled" || "${{ needs.build-test.result }}" == "cancelled" || "${{ needs.coverage.result }}" == "cancelled" ]]; then
            echo "TITLE=# ⚠️Pipeline Interrupted" >> $GITHUB_ENV
          else
            echo "TITLE=# ❌Pipeline Failed" >> $GITHUB_ENV
          fi

      - name: Send Discord Notification
        uses: Ilshidur/action-discord@master
        with:
          args: |
            "${{ env.TITLE }}

            **Author**: ${{ github.actor }}
            **Commit**: `${{ env.COMMIT_MESSAGE }}`
            **Details**: [Workflow](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})"
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_USERNAME: GitHub Actions
          DISCORD_AVATAR: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
